buildscript {
    ext {
        springBootVersion = '3.2.0'
        dependencyManagementVersion = '1.1.0'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'

//repositories {
//    mavenCentral()
//}

bootJar.enabled = false

subprojects {

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.mindshare'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    // 공통 dependencies
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//        annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
        implementation 'org.springframework.boot:spring-boot-starter-web'

//        // JSR305 의존성 추가
//        implementation 'com.google.code.findbugs:jsr305:3.0.2'

        // Jakarta Validation
        implementation 'jakarta.validation:jakarta.validation-api:3.0.2' // Jakarta Validation
        implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final' // Hibernate Validator

        implementation 'com.fasterxml.jackson.core:jackson-databind'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

        annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
        implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    // Q 클래스 생성 설정
    def querydslDir = "src/main/generated"

    task compileQuerydsl(type: JavaCompile) {
        source = sourceSets.main.java.srcDirs
        classpath = sourceSets.main.compileClasspath
        destinationDir = file(querydslDir)

        options.annotationProcessorPath = configurations.annotationProcessor
    }

    tasks.named('compileJava') {
        dependsOn compileQuerydsl // compileJava가 compileQuerydsl에 의존하도록 설정
    }

//    sourceSets {
//        main.java.srcDirs += querydslDir // 생성된 Q 클래스를 소스 세트에 추가
//    }

    clean {
        delete querydslDir // 클린 작업 시 생성된 디렉토리 삭제
    }

    test {
        useJUnitPlatform()
    }
}

project(':app-platform-api') {
    dependencies {
        implementation project(':system-core')
        implementation project(':client-core')
        implementation project(':domain-system')
        implementation project(':domain-board')
        implementation project(':domain-user')
    }
}

project(':client-core') {
    bootJar {
        enabled=false
    }

    dependencies {
        implementation project(':system-core')
    }
}

project(':domain-user') {
    bootJar {
        enabled=false
    }

    dependencies {
        implementation project(':domain-system')
    }
}

project(':domain-board') {
    bootJar {
        enabled=false
    }

    dependencies {
        implementation project(':domain-user')
        implementation project(':domain-system')
    }
}

project(':domain-system') {
    bootJar {
        enabled=false
    }
}

project(':system-core') {
    bootJar {
        enabled=false
    }
}